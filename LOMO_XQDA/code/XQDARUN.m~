function dist=XQDARUN(sentenceGalFea, sentenceProbFea,sentenceClassLabel)
                        
    numSentences=size(sentenceGalFea,1);
    p = randperm(numSentences);
    galFea1 = sentenceGalFea(p(1:int16(numSentences/2)), : );
    probFea1 = sentenceProbFea(p(1:int16(numSentences/2)), : );
    classLabelGal1=sentenceClassLabel(p(1:int16(numSentences/2)));
    classLabelProb1=sentenceClassLabel(p(1:int16(numSentences/2)));


    t0 = tic;
    xqdaOptions.qdaDims=size(galFea1,2);
    xqdaOptions.verboes=true;
                       
    [W, M] = XQDA(galFea1, probFea1, classLabelGal1', classLabelProb1', xqdaOptions);
    fprintf('The computed subspace dimension %d', size(W,2));
    
    clear galFea1 probFea1
    trainTime = toc(t0);
    
    %Squeeze removes singleton dimensions
    galFea2 = sentenceGalFea(p(int16(numImages/2)+1 : end), : );
    probFea2 = sentenceProbFea(p(int16(numImages/2)+1 : end), : );
    classLabelGal2=sentenceClassLabel(p(int16(numImages/2)+1 : end));
    classLabelProb2=sentenceClassLabel(p(int16(numImages/2)+1 : end));
                        
                        
    t0 = tic;
    %Produces score matrix of all distances between probe
    %and gallery images
    dist = MahDist(M, galFea2 * W, probFea2 * W);
    clear galFea2 probFea2 M W
    matchTime = toc(t0);      

    fprintf('Fold %d: ', iter);
    fprintf('Training time: %.3g seconds. ', trainTime);    
    fprintf('Matching time: %.3g seconds.\n', matchTime); 
    
end